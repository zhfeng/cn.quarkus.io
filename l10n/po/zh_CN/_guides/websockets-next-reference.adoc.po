msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSockets Next extension reference guide"
msgstr "WebSockets Next 扩展参考指南"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket protocol"
msgstr "WebSocket 协议"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] 中记录的 _WebSocket_ 协议建立了一种标准化方法，用于通过单个 TCP 连接在客户端和服务器之间创建双向通信通道。与 HTTP 不同的是，WebSocket 作为一个独立的 TCP 协议运行，但其设计目的是与 HTTP 无缝结合。例如，它重复使用相同的端口，并兼容相同的安全机制。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr "使用 WebSocket 进行交互时，HTTP 请求会使用 \"升级 \"标头过渡到 WebSocket 协议。服务器会回复一个 `101 Switching Protocols` 响应，将 HTTP 连接升级为 WebSocket 连接，而不是 `200 OK` 响应。握手成功后，初始 HTTP 升级请求中使用的 TCP 套接字将保持开放状态，客户端和服务器可继续双向交换信息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTP 和 WebSocket 架构风格"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "尽管 WebSocket 与 HTTP 兼容并通过 HTTP 请求启动，但必须认识到，这两种协议会导致截然不同的架构和编程模型。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr "通过 HTTP/REST，应用程序是围绕处理各种 HTTP 方法和路径的资源/端点构建的。客户端通过发出具有适当方法和路径的 HTTP 请求，按照请求-响应模式进行交互。服务器根据路径、方法和标头将传入的请求路由到相应的处理程序，然后以定义明确的响应进行回复。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr "相反，WebSocket 通常只涉及一个用于初始 HTTP 连接的端点，之后所有信息都使用相同的 TCP 连接。它引入了一种完全不同的交互模式：异步和消息驱动。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr "WebSocket 是一种低级传输协议，与 HTTP 截然不同。信息格式、路由选择或处理需要客户端和服务器事先就信息语义达成一致。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "对于 WebSocket 客户端和服务器，HTTP 握手请求中的 `Sec-WebSocket-Protocol` 标头允许协商更高级别的消息传递协议。如果没有这种协议，服务器和客户端就必须建立自己的约定。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSockets 与 Quarkus WebSockets 下一步"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr "本指南使用 `quarkus-websockets-next` 扩展，它是 WebSocket API 的一种实现方式，与传统的 `quarkus-websockets` 扩展相比，具有更高的效率和可用性。原有的 `quarkus-websockets` 扩展仍可访问，并将获得持续支持，但不太可能进行功能开发。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr "与 `quarkus-websockets` 不同， `quarkus-websockets-next` 扩展并 *不* 实现 Jakarta WebSocket 规范。取而代之的是，它引入了一个现代的 API，优先考虑使用的简便性。此外，它还专为与 Quarkus 的反应式架构和网络层无缝集成而量身定制。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr "Quarkus WebSockets next 扩展使用的注解与 JSR 356 中的注解不同，尽管有时名称相同。JSR 注释带有一种语义，而 Quarkus WebSockets Next 扩展并不遵循这种语义。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use the WebSockets Next extension"
msgstr "使用 WebSockets Next 扩展"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"To use the `websockets-next` extension, you need to add the `io.quarkus.quarkus-websockets-next` extension to your project.\n"
"In your `pom.xml` file, add:"
msgstr "要使用 `websockets-next` 扩展名，需要在项目中添加 `io.quarkus.quarkus-websockets-next` 扩展名。在 `pom.xml` 文件中，添加"

#: _guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configure the WebSocket server"
msgstr "配置 WebSocket 服务器"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket handling reuses the _main_ HTTP server."
msgstr "WebSocket 处理重复使用 _主_ HTTP 服务器。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "因此，WebSocket 服务器的配置在 `quarkus.http.` 配置部分完成。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to /).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr "应用程序中配置的 WebSocket 路径与 `quarkus.http.root` 定义的根路径（默认为/）连接。这种连接可确保 WebSocket 端点在应用程序的 URL 结构中位置恰当。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "详情请参考 xref:http-reference.adoc[HTTP 指南] 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Declare WebSocket endpoints"
msgstr "声明 WebSocket 端点"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To declare web socket endpoints, you need to create a class annotated with `@io.quarkus.websockets.next.WebSocket` and define the path of the WebSocket endpoint:"
msgstr "要声明 Web socket 端点，需要创建一个注释为 `@io.quarkus.websockets.next.WebSocket` 的类，并定义 WebSocket 端点的路径："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr "因此，客户端可以使用 `ws://localhost:8080/chat/your-name` 连接到该网络套接字端点。如果使用 TLS，则 URL 为 `wss://localhost:8443/chat/your-name` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path parameters"
msgstr "路径参数"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The path of the WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr "WebSocket 端点的路径可以包含路径参数。其语法与 JAX-RS 资源相同： `{parameterName}` ."

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Access to the path parameter values is done through the `io.quarkus.websockets.next.WebSocketConnection` _session_ object:"
msgstr "通过 `io.quarkus.websockets.next.WebSocketConnection` _会话_ 对象访问路径参数值："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `pathParam` method returns `null`."
msgstr "路径参数值总是字符串。如果路径中不存在路径参数， `pathParam` 方法将返回 `null` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Query parameters are not supported. However, you can access the query using `session.handshakeRequest().query()`"
msgstr "不支持查询参数。不过，您可以使用 `session.handshakeRequest().query()`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sub-websockets endpoints"
msgstr "子网络接口端点"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A class annotated with `@WebSocket` can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-web_ sockets.\n"
"The resulting path of these sub-web sockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr "注释为 `@WebSocket` 的类可以封装静态嵌套类，这些嵌套类也注释为 `@WebSocket` ，代表 _子网络_ 套接字。这些子网络套接字的路径由外层类和嵌套类的路径连接而成。生成的路径将按照 HTTP URL 规则进行规范化处理。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Sub-web sockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr "子网络套接字继承了对外层类和嵌套类的 `@WebSocket` 注解中声明的路径参数的访问权限。在下面的示例中，外层类中的 `consumePrimary` 方法可以访问 `version` 参数。同时，嵌套类中的 `consumeNested` 方法可以访问 `version` 和 `id` 参数："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI Scopes for WebSocket Endpoints"
msgstr "WebSocket 端点的 CDI 作用域"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Classes annotated with `@WebSocket` are managed as CDI beans, allowing for flexible scope management within the application.\n"
"By default, WebSocket endpoints are considered in the singleton pseudo-scope.\n"
"However, developers can specify alternative scopes to suit their specific requirements:"
msgstr "注释为 `@WebSocket` 的类作为 CDI Bean 管理，允许在应用程序内进行灵活的作用域管理。默认情况下，WebSocket 端点被视为单例伪作用域。不过，开发人员可以指定其他作用域，以满足其特定需求："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Furthermore, each WebSocket connection is associated with its own _session_ scope.\n"
"When the `@OnOpen` method is invoked, a session scope corresponding to the WebSocket connection is established.\n"
"Subsequent calls to `@On[Text|Binary]Message` or `@OnClose` methods utilize this same session scope.\n"
"The session scope remains active until the `@OnClose` method completes execution, at which point it is terminated."
msgstr "此外，每个 WebSocket 连接都与自己的 _会话_ 作用域相关联。调用 `@OnOpen` 方法时，会建立一个与 WebSocket 连接相对应的会话作用域。随后对 `@On[Text|Binary]Message` 或 `@OnClose` 方法的调用都会使用相同的会话作用域。在 `@OnClose` 方法执行完毕之前，会话作用域一直处于活动状态，直到该方法被终止。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` object, which represents the connection itself, is also a session-scoped bean, allowing developers to access and manage WebSocket-specific data within the context of the session."
msgstr "代表连接本身的 `WebSocketConnection` 对象也是一个会话作用域 Bean，允许开发人员在会话上下文中访问和管理 WebSocket 特定数据。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In cases where a WebSocket endpoint does not declare an `@OnOpen` method, the session scope is still created.\n"
"It remains active until the connection terminates, regardless of the presence of an `@OnClose` method."
msgstr "如果 WebSocket 端点没有声明 `@OnOpen` 方法，会话作用域仍会被创建。无论是否存在 `@OnClose` 方法，会话作用域都会一直处于活动状态，直到连接终止。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen`, and `@OnClose` also have the request scoped activated for the duration of the method execution (until it produced its result)."
msgstr "注释为 `@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen` , 和 `@OnClose` 的方法也会在方法执行期间激活请求作用域（直到产生结果）。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket endpoint methods"
msgstr "WebSocket 端点方法"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A WebSocket endpoint comprises the following components:"
msgstr "WebSocket 端点由以下组件组成："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path: This is the URL path where the WebSocket connection is established (e.g., ws://localhost:8080/)."
msgstr "路径：这是建立 WebSocket 连接的 URL 路径（如 ws://localhost:8080/）。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnTextMessage` method: Handles the connected client's text messages."
msgstr "最多一个 `@OnTextMessage` 方法：处理已连接客户端的文本信息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages the connected client sends."
msgstr "最多一个 `@OnBinaryMessage` 方法：处理已连接客户端发送的二进制信息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnOpen` method: Invoked when a client connects to the WebSocket."
msgstr "最多一个 `@OnOpen` 方法：当客户端连接到 WebSocket 时调用。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnClose` method: Executed upon the client disconnecting from the WebSocket."
msgstr "最多一个 `@OnClose` 方法：在客户端断开 WebSocket 连接时执行。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任何数量的 `@OnError` 方法：当发生错误时调用；即当端点回调抛出运行时错误时，或当发生转换错误时，或当返回的 `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` 接收失败时。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr "只有某些端点需要包含所有方法。但是，它必须至少包含 `@On[Text|Binary]Message` 或 `@OnOpen` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr "如果任何端点违反了这些规则，在构建时就会出错。代表子网络接口的静态嵌套类也遵循同样的准则。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "任何在 WebSocket 端点之外使用 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnOpen` 和 `@OnClose` 进行注解的方法都会被视为错误方法，并会导致构建失败，同时给出相应的错误信息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Processing messages"
msgstr "处理信息"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "从客户端接收信息的方法用 `@OnTextMessage` 或 `@OnBinaryMessage` 进行注释。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr "`OnTextMessage` 从客户端接收到的 _每条_ _文本_ 信息都会调用 。 `OnBinaryMessage` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Invocation Rules"
msgstr "调用规则"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When invoking these annotated methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr "调用这些注解方法时，与 WebSocket 连接相连的 _会话_ 作用域 _会_ 保持激活状态。此外，请求作用域在方法完成前（或在异步和反应式方法产生结果前）一直处于活动状态。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined by the method signature and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr "Quarkus WebSocket Next 支持 _阻塞_ 和 _非阻塞_ 逻辑，类似于 Quarkus REST，由方法签名和附加注解（如 `@Blocking` 和 `@NonBlocking` ）决定。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are the rules governing execution:"
msgstr "以下是执行规则："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Non-blocking methods must execute on the connection's event loop."
msgstr "非阻塞方法必须在连接的事件循环中执行。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@RunOnVirtualThread` are considered blocking and should execute on a virtual thread."
msgstr "注释为 `@RunOnVirtualThread` 的方法被视为阻塞方法，应在虚拟线程上执行。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Blocking methods must execute on a worker thread if not annotated with `@RunOnVirtualThread`."
msgstr "如果没有使用 `@RunOnVirtualThread` 进行注解，阻塞方法必须在工作线程上执行。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When `@RunOnVirtualThread` is employed, each invocation spawns a new virtual thread."
msgstr "`@RunOnVirtualThread` 时，每次调用都会产生一个新的虚拟线程。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `CompletionStage`, `Uni` and `Multi` are considered non-blocking."
msgstr "返回 `CompletionStage` 、 `Uni` 和 `Multi` 的方法被视为非阻塞方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `void` or plain objects are considered blocking."
msgstr "返回 `void` 或纯对象的方法被视为阻塞方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method Parameters"
msgstr "方法参数"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept exactly one message parameter:"
msgstr "该方法必须准确接受一个信息参数："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object (of any type)."
msgstr "信息对象（任何类型）。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A `Multi<X>` with X as the message type."
msgstr "`Multi<X>` ，信息类型为 X。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "However, it may also accept the following parameters:"
msgstr "不过，它也可以接受以下参数："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection`"
msgstr "`WebSocketConnection`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`String` 注释的参数 `@PathParam`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "消息对象代表发送的数据，可作为原始内容（ `String` , `JsonObject` , `JsonArray` , `Buffer` 或 `byte[]` ）或反序列化的高级对象访问，这是推荐的方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"The method must subscribe to the `Multi` to receive these items (or return a Multi)."
msgstr "接收 `Multi` 时，每个连接调用一次该方法，所提供的 `Multi` 接收此连接传送的项目。该方法必须订阅 `Multi` 才能接收这些项目（或返回一个 Multi）。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Allowed Returned Types"
msgstr "允许的返回类型"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "使用 `@OnTextMessage` 或 `@OnBinaryMessage` 进行注解的方法可以返回各种类型，以便有效处理 WebSocket 通信："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void` :表示阻塞方法，不会向客户端发送明确的响应。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned Uni signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>` :表示非阻塞方法，返回的 Uni 完成即表示处理结束。不会向客户端发送明确的响应。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` 类型的对象代表一个阻塞方法，在该方法中，返回的对象被序列化，并作为响应发送回客户端。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>` :指定一个非阻塞方法，在该方法中，非空 `Uni` 发送的项目将作为响应发送给客户端。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>` :表示一个非阻塞方法，在该方法中，非空 `Multi` 发送的项目会按顺序发送到客户端，直至完成或取消。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are some examples of these methods:"
msgstr "下面是这些方法的一些例子："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When returning a Multi, Quarkus subscribes to the returned Multi automatically and writes the emitted items until completion, failure, or cancellation. Failure or cancellation terminates the connection."
msgstr "在返回多重连接时，Quarkus 会自动订阅返回的多重连接，并写入发出的项目，直至完成、失败或取消。失败或取消会终止连接。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Streams"
msgstr "溪流"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr "除了单个信息外，WebSocket 端点还能处理信息流。在这种情况下，该方法接收 `Multi<X>` 作为参数。 `X` 的每个实例都将使用上述相同规则进行反序列化。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr "接收 `Multi` 的方法可以返回另一个 `Multi` 或 `void` 。如果方法返回的是 `Multi` ，则不必订阅传入的 `multi` ："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This approach allows bi-directional streaming."
msgstr "这种方法允许双向数据流。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the method returns `void`, it must subscribe to the incoming `Multi`:"
msgstr "当方法返回 `void` 时，它必须订阅传入的 `Multi` ："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Skipping reply"
msgstr "跳过回复"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr "当一个方法打算产生一条写给客户端的消息时，它可以发出 `null` 。发送 `null` 表示不向客户端发送响应，以便在需要时跳过响应。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "JsonObject and JsonArray"
msgstr "JsonObject 和 JsonArray"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr "Vert.x `JsonObject` 和 `JsonArray` 实例绕过了序列化和反序列化机制。信息以文本信息的形式发送。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Broadcasting"
msgstr "广播"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"By default, responses produced by `@On[Text|Binary]Message` methods are sent back to the connected client.\n"
"However, using the `broadcast` parameter, responses can be broadcasted to all connected clients."
msgstr "默认情况下， `@On[Text|Binary]Message` 方法产生的响应会发回已连接的客户端。不过，使用 `broadcast` 参数，可以将响应广播给所有已连接的客户端。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The same principle applies to methods returning instances of `Multi` or `Uni`."
msgstr "同样的原则也适用于返回 `Multi` 或 `Uni` 实例的方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "If you need to select the connected clients that should receive the message, you can use `WebSocketConnection.broadcast().filter().sendText()`."
msgstr "如果需要选择应接收信息的已连接客户端，可以使用 `WebSocketConnection.broadcast().filter().sendText()` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "OnOpen and OnClose methods"
msgstr "打开和关闭方法"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "当客户端连接或断开时，WebSocket 端点也会收到通知。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "具体做法是用 `@OnOpen` 或 `@OnClose` 对方法进行注释："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` 在客户端连接时触发，而 则在断开连接时调用。 `@OnClose` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "这些方法可以访问 _会话作用域_ `WebSocketConnection` Bean。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Parameters"
msgstr "参数"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "注释为 `@OnOpen` 和 `@OnClose` 的方法可接受以下参数："

#: _guides/websockets-next-reference.adoc
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr ""

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` 和 方法支持不同的返回类型。 `@OnClose` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr "对于 `@OnOpen` 方法，适用与 `@On[Text|Binary]Message` 相同的规则。因此，注释为 `@OnOpen` 的方法可以在连接后立即向客户端发送消息。 `@OnOpen` 方法支持的返回类型有"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void` :表示阻塞方法，不会向已连接的客户端发送明确信息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>` :表示非阻塞方法，返回 `Uni` 表示处理结束。不会向客户端发送任何信息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` 类型的对象：代表一个阻塞方法，在该方法中，返回的对象被序列化并发送回客户端。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>` :指定一个非阻塞方法，将非空 `Uni` 发送的项目发送到客户端。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Items sent to the client are serialized except for the `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr "除了 `String` , `JsonObject` , `JsonArray` , `Buffer` 和 `byte[]` 类型之外，发送到客户端的项目都是序列化的。在 `Multi` 的情况下，Quarkus 会订阅返回的 `Multi` ，并在项目发出时将其写入 `WebSocket` 。 `String` `JsonObject` `JsonArray` `Buffers` 和字节数组以二进制信息的形式发送。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For `@OnClose` methods, the allowed return types are:"
msgstr "对于 `@OnClose` 方法，允许的返回类型有"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: The method is considered blocking."
msgstr "`void` :该方法被认为是阻塞性的。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>` :该方法被认为是非阻塞的。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@OnClose` methods cannot send items to the connection client by returning objects.\n"
"They can only send messages to the other client by using the `WebSocketConnection` object."
msgstr "`@OnClose` 方法不能通过返回对象向连接客户端发送项目。它们只能通过 对象向其他客户端发送消息。 `WebSocketConnection` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server-side Streaming"
msgstr "服务器端流媒体"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` can utilize server-side streaming by returning a `Multi<X>`:"
msgstr "注释为 `@OnOpen` 的方法可以通过返回 `Multi<X>` 来利用服务器端流媒体："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Broadcasting with @OnOpen"
msgstr "通过 @OnOpen 进行广播"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Similar to `@On[Text|Binary]Message`, items sent to the client from a method annotated with `@OnOpen` can be broadcasted to all clients instead of just the connecting client:"
msgstr "与 `@On[Text|Binary]Message` 类似，从注释为 `@OnOpen` 的方法发送到客户端的项目可以广播给所有客户端，而不仅仅是连接的客户端："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Error Handling"
msgstr "错误处理"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The WebSocket endpoint can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "当发生错误时，WebSocket 端点也会收到通知。当端点回调抛出运行时错误、发生转换错误或返回的 `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` 出现故障时，会调用注释为 `@io.quarkus.websockets.next.OnError` 的 WebSocket 端点方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method must accept exactly one \"error\" parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr "方法必须接受一个 \"错误 \"参数，即可从 `java.lang.Throwable` 分配的参数。方法还可接受以下参数："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr "一个端点可以声明多个注释为 `@io.quarkus.websockets.next.OnError` 的方法，但每个方法必须声明不同的错误参数。我们会选择声明了实际异常的最特定超类型的方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` paremeters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr "`@io.quarkus.websockets.next.OnError` 注解也可用于声明全局错误处理程序，即未在 WebSocket 端点上声明的方法。这种方法可能不接受 `@PathParam` 参数。在端点上声明的错误处理程序优先于全局错误处理程序。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Access to the WebSocketConnection"
msgstr "访问 WebSocketConnection"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"It's _session-scoped_  and is valid for the whole duration of the connection."
msgstr "`io.quarkus.websockets.next.WebSocketConnection` 对象代表 WebSocket 连接。它是 _会话作用域_ ，在整个连接期间有效。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the `WebSocketConnection` object:"
msgstr "注释为 `@OnOpen` , `@OnTextMessage` , `@OnBinaryMessage` 和 `@OnClose` 的方法可以访问 `WebSocketConnection` 对象："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methos, the `WebSocketConnection` object is not available."
msgstr "请注意，在这些方法之外， `WebSocketConnection` 对象不可用。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, and broadcast messages to all connected clients."
msgstr "该连接可用于向客户端发送消息、访问路径参数以及向所有连接的客户端广播消息。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method to send messages:"
msgstr "`WebSocketConnection` 提供了阻塞和非阻塞两种发送消息的方法："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)` :向客户端发送文本信息，并等待信息发送完毕。它是阻塞的，只能由执行线程调用。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking, but you must subscribe to it."
msgstr "`sendText(String message)` :向客户端发送一条文本信息。它返回一个 `Uni` 。它是非阻塞的，但您必须订阅它。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Serialization and Deserialization"
msgstr "序列化和反序列化"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next 扩展支持消息的自动序列化和反序列化。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and by-pass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization uses JSON (Jackson) automatically."
msgstr "`String` , `JsonObject` , `JsonArray` , `Buffer` 和 `byte[]` 类型的对象按原样发送，并通过序列化和反序列化。如果没有提供编码解码器，序列化和反序列化将自动使用 JSON (Jackson)。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "如果需要自定义序列化和反序列化，可以提供自定义编解码器。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Custom codec"
msgstr "自定义编解码器"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To implement a custom codec, you must provides a CDI bean implementing:"
msgstr "要实现自定义编解码器，必须提供一个 CDI Bean 来实现："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.BinaryMessageCodec`  for binary messages"
msgstr "`io.quarkus.websockets.next.BinaryMessageCodec` 用于二进制信息"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.TextMessageCodec`  for text messages"
msgstr "`io.quarkus.websockets.next.TextMessageCodec` 用于短信"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "下面的示例展示了如何为 `Item` 类实现自定义编解码器："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec need to be used explicitly:"
msgstr "`OnTextMessage` 和 方法也可以明确指定需要使用的编解码器： `OnBinaryMessage` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "指定用于报文反序列化和序列化的编解码器"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "如果序列化和反序列化必须使用不同的编解码器，可以分别指定序列化和反序列化使用的编解码器："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization of the incoming message"
msgstr "指定输入信息反序列化时使用的编解码器"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "指定用于外发信息序列化的编解码器"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Handle Pong message"
msgstr "处理乒乓信息"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `@OnPongMessage` annotation is used to consume pong messages.\n"
"A websocket endpoint must declare at most one method annotated with `@OnPongMessage`."
msgstr "`@OnPongMessage` 注解用于消费 pong 消息。一个 websocket 端点必须最多声明一个注释为 `@OnPongMessage` 的方法。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept a single parameter of type `Buffer`:"
msgstr "方法必须接受一个类型为 `Buffer` 的参数："

#: _guides/websockets-next-reference.adoc
msgid "Security"
msgstr "安全"

#: _guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr ""

#: _guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例如："

#: _guides/websockets-next-reference.adoc
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr ""

#: _guides/websockets-next-reference.adoc
msgid "The error handler is invoked in case of the authorization failure."
msgstr ""

#: _guides/websockets-next-reference.adoc
msgid "`SecurityIdentity` is initially created during a secure HTTP upgrade and associated with the websocket connection."
msgstr ""

#: _guides/websockets-next-reference.adoc
msgid ""
"Currently, for an HTTP upgrade be secured, users must configure an HTTP policy protecting the HTTP upgrade path.\n"
"For example, to secure the `open()` method in the above websocket endpoint, one can add the following authentication policy:"
msgstr ""

#: _guides/websockets-next-reference.adoc
msgid "Other options for securing HTTP upgrade requests, such as using the security annotations, will be explored in the future."
msgstr ""

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
