msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/tls-registry-reference.adoc
msgid "TLS registry reference"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The TLS registry is a Quarkus extension centralizing the TLS configuration for the application.\n"
"It allows to define the TLS configuration in a single place and to reference it from multiple places in the application."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The TLS extension should be automatically added to your project as soon as you use a compatible extension.\n"
"For example, if your application uses Quarkus REST, gRPC or reactive routes, the TLS registry is automatically added to your project."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Examples"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure a TLS connection, and more specifically the key stores and trust stores, you use the `quarkus.tls.*` properties."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Configuration directly under `quarkus.tls` is the default configuration that will be used by all the TLS connections in the application.\n"
"However, you can also have specific configurations for specific connections by using the `quarkus.tls.<name>.*` properties."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Configure the HTTP server to use https://"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure the HTTP server to use HTTPS, you can use the following configuration:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "So you a `p12` (PKCS12) key store, use the following configuration:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Instead of the default configuration, you can use a named configuration:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Configure a client to use https://"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "As an example to illustrate client configuration, we will use a gRPC client:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Configuring mTLS"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"To configure mTLS, you need to configure both the server and the client.\n"
"Both will receive a key store and a trust store:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the server key store contains the server certificate and private key"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the client key store contains the client certificate and private key"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the server trust store contains the client certificate (to authenticate the client)"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the client trust store contains the server certificate (to authenticate the server)"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Referencing a TLS configuration"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Once you have configured a _named_ configuration using `quarkus.tls.<name>`, you need to reference it.\n"
"This is done using the `tls-configuration-name` property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Configuring TLS"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Configuring TLS is mainly about key stores and trust stores.\n"
"The configuration depends on the format (`pem`, `p12`, `jks`...).\n"
"There are other important properties too.\n"
"This section details the various properties you can use to configure TLS."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Key stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Key stores are used to store the private key and the certificate.\n"
"They are mainly used on the server-side, but can also be used on the client-side when mTLS is used."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "PEM key stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"PEM key stores are composed of a list of pair of two files: the certificate and the private key.\n"
"The certificate file is a `.crt` or `.pem` file, and the private key file is often a `.key` file."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure a PEM key store, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"In general, you will only need one pair of certificate and private key.\n"
"The certificate may contain multiple certificates (a chain), but there should be one private key."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"When multiple pairs are configured, the selection is done using SNI (Server Name Indication).\n"
"The client will send the server name it wants to connect to, and the server will select the appropriate pair of certificate and private key.\n"
"Make sure xref:./tls-registry-reference.adoc#sni[SNI] is enabled on both the client and server to use this feature."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When configuring multiple key/cert pairs, the order is following the lexicographical order of the name (`a` and `b` in the previous snippet). So, the first pair is the one with the lowest lexicographical order. You can define the order by using the `quarkus.tls.key-store.pem.order` property, for example: `quarkus.tls.key-store.pem.order=b,c,a`. This is important when using SNI, as the first pair is the default one."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "PKCS12 key stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"PKCS12 key stores are a single file containing the certificate and the private key.\n"
"To configure a PKCS12 key store, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the key store.\n"
"Also, they can include more than one certificate and private key.\n"
"In this case, you can:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "either provide the alias of the certificate and private key you want to use"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "or use SNI to select the appropriate certificate and private key (all keys must use the same password)"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure the alias, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "JKS key stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"JKS key stores are a single file containing the certificate and the private key.\n"
"Note that the JKS format should be avoided as it is less secure than PKCS12.\n"
"To configure a JKS key store, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the key store.\n"
"Also, they can include more than one certificate and private key.\n"
"In this case, you can:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "SNI"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Server Name Indication (SNI) is a TLS extension that allows a client to specify the hostname it is attempting to connect to during the TLS handshake.\n"
"It enables a server to present different TLS certificates for multiple domains on a single IP address, facilitating secure communication for virtual hosting scenarios."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To enable SNI, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "With this setting enabled, the client indicate the server name during the TLS handshake, allowing the server to select the right certificate:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When configuring the keystore with PEM files, multiple CRT/Key must be given."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When configuring the keystore with a JKS or a P12 file, it selects one alias based on the SNI hostname. In this case, all the keystore password and alias password must be the same. Do not set the `alias` property in this case."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Credential providers"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Instead of passing the key store password and alias password in the configuration, you can use a credential provider."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"A credential provider offers a way to retrieve the key store password and alias password.\n"
"Note that the credential provider is only used if the password / alias password are not set in the configuration."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure a credential provider, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "The credential provider can only be used with PKCS12 and JKS key stores."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Trust stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Trust stores are used to store the certificates of the trusted parties.\n"
"They are generally used on the client-side, and on the server-side when mTLS is used."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "PEM trust stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"PEM trust stores are composed of a list of `.crt` or `.pem` files.\n"
"Each of them contains a certificate."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure a PEM trust store, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "PKCS12 trust stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"PKCS12 trust stores are a single file containing the certificates.\n"
"When multiple certificates are included, you can use the alias to select the appropriate certificate."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure a PKCS12 trust store, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the trust store.\n"
"However, unlike for key stores, the alias does not require a password (because it's the public certificate and not a private key)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "JKS trust stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"JKS trust stores are a single file containing the certificates.\n"
"When multiple certificates are included, you can use the alias to select the appropriate certificate.\n"
"Note that the JKS format should be avoided as it is less secure than PKCS12."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure a JKS trust store, use the following properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the trust store.\n"
"However, unlike for key stores, the alias does not require a password (because it's the public certificate and not a private key)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Instead of passing the trust store password in the configuration, you can use a credential provider."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"A credential provider offers a way to retrieve passwords and other credentials.\n"
"Note that the credential provider is only used if the password is not set in the configuration."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "The credential provider can only be used with PKCS12 and JKS trust stores."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Other properties"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "While key stores and trust stores are the most important properties, there are other properties you can use to configure TLS."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "while the following examples use the _default_ configuration, you can use the _named_ configuration by prefixing the properties with the name of the configuration."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Cipher suites"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The cipher suites are the list of ciphers that can be used during the TLS handshake.\n"
"You can configure the ordered list of enabled cipher suites.\n"
"If not configured, a reasonable default is selected from the built-in ciphers.\n"
"However, when configured, it takes precedence over the default suite defined by the SSL engine in use."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure the cipher suites, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "TLS Protocol versions"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The TLS protocol versions are the list of protocols that can be used during the TLS handshake.\n"
"You can configure the ordered list of enabled TLS protocols.\n"
"If not configured , it defaults to `TLSv1.3`, `TLSv1.2`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Are supported: `TLSv1`, `TLSv1.1`, `TLSv1.2`, `TLSv1.3`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To only enable `TLSv1.3`, configure the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Handshake timeout"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"When a TLS connection is established, the handshake phase is the first step.\n"
"During this phase, the client and server exchange information to establish the connection, typically the cipher suite, the TLS protocol version, the certification validation and so on."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure the timeout for the handshake phase, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "ALPN"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Application-Layer Protocol Negotiation (ALPN) is a TLS extension that allows the client and server during the TLS handshake to negotiate which protocol they will use for communication.\n"
"ALPN enables more efficient communication by allowing the client to indicate its preferred application protocol to the server before the TLS connection is established."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "This helps in scenarios such as HTTP/2 where multiple protocols may be available, allowing for faster protocol selection."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"ALPN is enabled by default.\n"
"To disable it, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Certificate Revocation List (CRL)"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"A Certificate Revocation List (CRL) is a list of certificates that have been revoked by the issuing Certificate Authority (CA) before their scheduled expiration date.\n"
"When a certificate is compromised, no longer needed, or deemed invalid for any reason, the CA adds it to the CRL to inform relying parties not to trust the certificate anymore."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"You can configure the CRL with the list of certificate files you do not trust anymore.\n"
"Two formats are allowed: DER and PKCS#7 (also known as P7B)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When using the DER format, you must pass DER-encoded CRLs."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When using the PKCS#7 format, you must pass PKCS#7 `SignedData` object, with the only significant field being `crls`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To configure the CRL, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Trusting all certificates and hostname verification"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "These two properties should not be used in production."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"You can configure your TLS connection to trust all certificates and to disable the hostname verification.\n"
"These are two different steps:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "trusting all certificates ignores the certificate validation, so all certificates are trusted. It is useful for testing with self-signed certificates, but should not be used in production."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "hostname verification is the process of verifying the server's identity. It is useful to prevent man-in-the-middle attacks. It often defaults to `HTTPS` or `LDAPS`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To trust all certificates, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To disable the hostname verification, use the following property:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Configuration reference"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "The following table lists the supported properties:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "The registry API"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "While extensions will automatically use the TLS registry, you can also use the registry API to access the TLS configuration programmatically."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To access the TLS configuration, inject the `TlsConfigurationRegistry` bean and gets the TLS configuration by name (or the default one):"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The `TlsConfiguration` object contains the key stores, trust stores, cipher suites, protocols, and other properties.\n"
"It also provides a way to create an `SSLContext` from the configuration."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "As Vert.x is omnipresent in Quarkus, you can also use the `TlsConfiguration` object to configure the Vert.x client or server such as `KeyCertOptions`, `TrustOptions`, and so on."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Registering a certificate from an extension"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"This section is only for extension developers.\n"
"An extension can register a certificate in the TLS registry.\n"
"This is useful when an extension needs to provide a certificate to the application or provides a different format."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"To achieve this, the extension _processor_ must produce a `TlsCertificateBuildItem`.\n"
"A `TlsCertificateBuildItem` is composed of a name and a `CertificateSupplier`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The certificate supplier is a runtime object that is generally retrieved using a recorder method.\n"
"Here is an example of a certificate supplier:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Startup checks"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When the application starts, the TLS registry performs some checks to ensure the configuration is correct:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the key stores and trust stores are accessible"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the aliases are available and accessible in the key stores and trust stores"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the certificates are valid"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the cipher suites and protocols are valid"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "the CRLs are valid"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "If any of these checks fail, the application will fail to start."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Reloading Certificates"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The `TlsConfiguration` obtained from the `TLSConfigurationRegistry` includes a mechanism for reloading certificates.\n"
"The `reload` method refreshes the key stores and trust stores, typically by reloading them from the file system."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "The reload operation is not automatic and must be triggered manually. Additionally, the `TlsConfiguration` implementation must support reloading (which is the case for the configured certificate)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The `reload` method returns a `boolean` indicating whether the reload was successful.\n"
"A value of `true` means the reload operation was successful, not necessarily that there were updates to the certificates."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"After a `TlsConfiguration` has been reloaded, servers and clients using this configuration may need to perform specific actions to apply the new certificates.\n"
"The recommended approach is to fire a CDI event (`CertificateReloadedEvent`) that servers and clients can listen to and make the necessary changes:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "These APIs provide a way to implement custom certificate reloading."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Periodic reloading"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The TLS registry does include a built-in mechanism for periodically checking the file system for changes and reloading the certificates.\n"
"You can configure periodic reloading of certificates using properties.\n"
"The `reload-period` property specifies the interval at which certificates are reloaded, and it will emit a `CertificateReloadedEvent`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "For each named configuration, you can set a specific reload period:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Remember that the impacted server and client may need to listen to the `CertificateReloadedEvent` to apply the new certificates.\n"
"This is automatically done for the Quarkus HTTP server (including the management interface if enabled)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Using Kubernetes secrets or cert-manager"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When running in Kubernetes, you can use Kubernetes secrets to store the key stores and trust stores."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Using Kubernetes secrets"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"To use Kubernetes secrets, you need to create a secret with the key stores and trust stores.\n"
"Let's take the following secret as an example:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "The easiest way to uses these certificates is to mount the secret as a volume in the pod:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Then, you can configure the TLS registry to use the certificates:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "You can combine this with the periodic reloading to automatically reload the certificates when they change."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Using cert-manager"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"When running in Kubernetes, you can use cert-manager to automatically generate and renew certificates.\n"
"Cert-manager will produce a secret with the key stores and trust stores.\n"
"So, configuring the TLS registry is the same as when using Kubernetes secrets.\n"
"The generated secret uses the following files:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "`tls.crt` for the certificate"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "`tls.key` for the private key"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "`ca.crt` for the CA certificate (if needed)"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To handle the renewal, you can use the periodic reloading mechanism:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Quarkus CLI commands and development CA (Certificate Authority)"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The TLS registry provides CLI commands to generate a development CA and trusted certificates.\n"
"This avoids having to use self-signed certificates locally."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"In most cases, you generate the Quarkus Development CA once, and then generate certificates signed by this CA.\n"
"The Quarkus Development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"It is only valid for development purposes and only trusted on the local machine.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`, and installed in the system trust store."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "CA, signed vs. self-signed certificates"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When developing with TLS, you can use two types of certificates:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "a self-signed certificate: the certificate is signed by the same entity that uses it. It is not trusted by default. It's generally what we use when we don't have a CA, or don't want to dig too much into TLS. This is not a production setup, and may be used only for development."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "a signed certificate: the certificate is signed by a Certificate Authority (CA). The CA is a trusted entity that signs the certificate. The certificate is trusted by default. This is what we use in production."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"We could use self-signed certificate when running application locally, but it's not always convenient.\n"
"Typically, browsers will not trust the certificate, and you will have to import it manually.\n"
"`curl`, `wget`, `httpie` and other tools will also not trust the certificate."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"To avoid this, we can use a development CA to sign the certificates, and install it into the system trust store.\n"
"Thus, every certificate signed by this CA will be trusted by the system."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Quarkus makes it easy to generate a development CA and certificates signed by this CA."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Generate a development CA"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"Note that the generated CA is only valid for development purposes, and only trusted on the local machine."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To generate a development CA, use the following command:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"`--install` installs the CA in the system trust store.\n"
"Windows, Mac and Linux (Fedora and Ubuntu) are supported.\n"
"However, depending on your browser, you may need to import the generated CA manually.\n"
"Refer to the browser documentation for more information.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "When installing the certificate, your system may ask for your password to install the certificate in the system trust store, or ask for confirmation in a dialog (on Windows)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "On Windows, makes sure you run from an elevated terminal (run as administrator) to install the CA in the system trust store."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"`--renew` renews the CA if it already exists.\n"
"When this option is used, you need to re-generate the certificates that were signed by the CA, as the private key is changed.\n"
"Note that if the CA expires, it will automatically be renewed (without passing `--renew`)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "`--truststore` also generates a PKCS12 trust store containing the CA certificate."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Generate a trusted (signed) certificate"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"Once you have installed the Quarkus Development CA, you can generate a trusted certificate.\n"
"It will be signed by the Quarkus Development CA, and so trusted by your system."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "This generates a certificate signed by the Quarkus Development CA, and so if properly installed / imported, will be trusted by your system."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"The certificate is stored in `./.certs/`.\n"
"Two files are generated:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "`$NAME-keystore.p12` - contains the private key and the certificate. It's password protected."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "`$NAME-truststore.p12` - contains the CA certificate, that you can used as trust store (for test, for instance)."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "More options are available:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid ""
"When generating the certificate, a `.env` file is also generated making the Quarkus dev mode aware of these certificates.\n"
"So, then, if you run your application in dev mode, it will use these certificates:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Now, you can open the Dev UI using HTTPS: `https://localhost:8443/q/dev`, or issue a request using `curl`:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "If the Quarkus Development CA is not installed, a self-signed certificate is generated."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Generating a self-signed certificate"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Even if the Quarkus Development CA is installed, you can generate a self-signed certificate:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "This generates a self-signed certificate, not signed by the Quarkus Development CA."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Uninstalling the Quarkus Development CA"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Uninstalling the Quarkus Development CA from your system depends on your OS."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Deleting the CA certificate on Windows"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "To delete the CA certificate on Windows, use the following commands from a Powershell terminal with administrator rights:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Replace `$Serial_Number` with the serial number of the CA certificate."
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Deleting the CA certificate on Linux"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "On Fedora, you can use the following command:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "On Ubuntu, you can use the following command:"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "Deleting the CA certificate on Mac"
msgstr ""

#: _guides/tls-registry-reference.adoc
msgid "On Mac, you can use the following command:"
msgstr ""
