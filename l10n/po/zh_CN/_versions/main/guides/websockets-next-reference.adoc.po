msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSockets Next reference guide"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket protocol"
msgstr "WebSocket 协议"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] 中记录的 _WebSocket_ 协议建立了一种标准化方法，用于通过单个 TCP 连接在客户端和服务器之间创建双向通信通道。与 HTTP 不同的是，WebSocket 作为一个独立的 TCP 协议运行，但其设计目的是与 HTTP 无缝结合。例如，它重复使用相同的端口，并兼容相同的安全机制。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr "使用 WebSocket 进行交互时，HTTP 请求会使用 \"升级 \"标头过渡到 WebSocket 协议。服务器会回复一个 `101 Switching Protocols` 响应，将 HTTP 连接升级为 WebSocket 连接，而不是 `200 OK` 响应。握手成功后，初始 HTTP 升级请求中使用的 TCP 套接字将保持开放状态，客户端和服务器可持续双向交换信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTP 和 WebSocket 架构风格"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "尽管 WebSocket 与 HTTP 兼容并通过 HTTP 请求启动，但必须认识到，这两种协议会导致截然不同的架构和编程模型。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr "通过 HTTP/REST，应用程序是围绕处理各种 HTTP 方法和路径的资源/端点构建的。客户端通过发出具有适当方法和路径的 HTTP 请求，按照请求-响应模式进行交互。服务器根据路径、方法和标头将传入的请求路由到相应的处理程序，然后以定义明确的响应进行回复。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr "相反，WebSocket 通常只涉及一个用于初始 HTTP 连接的端点，之后所有信息都使用相同的 TCP 连接。它引入了一种完全不同的交互模式：异步和消息驱动。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr "WebSocket 是一种低级传输协议，与 HTTP 截然不同。消息格式、路由选择或处理需要客户端和服务器事先就消息语义达成一致。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "对于 WebSocket 客户端和服务器，HTTP 握手请求中的 `Sec-WebSocket-Protocol` 标头允许协商更高级别的消息传递协议。如果没有这种协议，服务器和客户端就必须建立自己的约定。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSockets 与 Quarkus WebSockets 下一步"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr "本指南使用 `quarkus-websockets-next` 扩展，它是 WebSocket API 的一种实现方式，与传统的 `quarkus-websockets` 扩展相比，具有更高的效率和可用性。原有的 `quarkus-websockets` 扩展仍可访问，并将获得持续支持，但不太可能进行功能开发。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr "与 `quarkus-websockets` 不同， `quarkus-websockets-next` 扩展并 *不* 实现 Jakarta WebSocket 规范。取而代之的是，它引入了一个现代的 API，优先考虑使用的简便性。此外，它还专为与 Quarkus 的反应式架构和网络层无缝集成而量身定制。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr "Quarkus WebSockets next 扩展使用的注解与 JSR 356 中的注解不同，尽管有时名称相同。JSR 注释带有一种语义，而 Quarkus WebSockets Next 扩展并不遵循这种语义。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Project setup"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "To use the `websockets-next` extension, you need to add the `io.quarkus:quarkus-websockets-next` depencency to your project."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Endpoints"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Both the <<server-api>> and <<client-api>> define _endpoints_ that are used to consume and send messages.\n"
"The endpoints are implemented as CDI beans and support injection.\n"
"Endpoints declare <<callback-methods,_callback methods_>> annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnPingMessage`, `@OnPongMessage`, `@OnOpen`, `@OnClose` and `@OnError`.\n"
"These methods are used to handle various WebSocket events.\n"
"Typically, a method annotated with `@OnTextMessage` is called when the connected client sends a message to the server and vice versa."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The client API also includes <<client-connectors,connectors>> that are used to configure and create new WebSocket connections."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Server endpoints"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Server endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocket`.\n"
"The value of `WebSocket#path()` is used to define the path of the endpoint."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr "因此，客户端可以使用 `ws://localhost:8080/chat/your-name` 连接到该网络套接字端点。如果使用 TLS，则 URL 为 `wss://localhost:8443/chat/your-name` 。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The endpoint path is relative to the xref:http-reference.adoc#context-path[root context] configured by the `quarkus.http.root-path` (which is `/` by default). For example, if you add `quarkus.http.root-path=/api` to your `application.properties` then a client can connect to this endpoint using `http://localhost:8080/api/chat/the-name`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Client endpoints"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Client endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocketClient`.\n"
"The value of `WebSocketClient#path()` is used to define the path of the endpoint this client will be connected to."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Client endpoints are used to consume and send messages. You'll need the <<client-connectors,connectors API>> to configure and open new WebSocket connections."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path parameters"
msgstr "路径参数"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The path of a WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"You can access the path parameter values using the `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` method, or `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` respectively.\n"
"Alternatively, an endpoint callback method parameter annotated with `@io.quarkus.websockets.next.PathParam` is injected automatically."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`WebSocketConnection#pathParam(String)` example"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` method returns `null`.\n"
"If there is an endpoint callback method parameter annotated with `@PathParam` and the parameter name is not defined in the endpoint path, then the build fails."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Query parameters are not supported. However, you can access the query using `WebSocketConnection#handshakeRequest().query()`"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "CDI scopes"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Endpoints are managed as CDI beans.\n"
"By default, the `@Singleton` scope is used.\n"
"However, developers can specify alternative scopes to fit their specific requirements."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`@Singleton` and `@ApplicationScoped` endpoints are shared across all WebSocket connections.\n"
"Therefore, implementations should be either stateless or thread-safe."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Session context"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"If an endpoint is annotated with `@SessionScoped`, or depends directly or indirectly on a `@SessionScoped` bean, then each WebSocket connection is associated with its own _session context_.\n"
"The session context is active during endpoint callback invocation.\n"
"Subsequent invocations of <<callback-methods>> within the same connection utilize the same session context.\n"
"The session context remains active until the connection is closed (usually when the `@OnClose` method completes execution), at which point it is terminated."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-session-context` config property to `always`. In this case, the session context is always activated, no matter if a `@SessionScoped` bean participates in the dependency tree."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`@SessionScoped` Endpoint"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This server endpoint is not shared and is scoped to the session/connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Request context"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Each WebSocket endpoint callback method execution is associated with a new CDI _request context_ if the endpoint is:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Annotated with the `@RequestScoped` annotation."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Has a method annotated with a security annotation such as `@RolesAllowed`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Depends directly or indirectly on a `@RequestScoped` bean."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Depends directly or indirectly on a CDI beans secured with a standard security annotation."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-request-context` config property to `always`. In this case, the request context is always activated when an endpoint callback is invoked."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`@RequestScoped` Endpoint"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This server endpoint is instantiated for each callback method execution."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Callback methods"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "A WebSocket endpoint may declare:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnTextMessage` method: Handles the text messages from the connected client/server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages from the connected client/server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnPingMessage` method: Handles the ping messages from the connected client/server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnPongMessage` method: Handles the pong messages from the connected client/server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnOpen` method: Invoked when a connection is opened."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnClose` method: Executed when the connection is closed."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任何数量的 `@OnError` 方法：当发生错误时调用；即当端点回调抛出运行时错误时，或当发生转换错误时，或当返回的 `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` 接收失败时。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr "只有某些端点需要包含所有方法。但是，它必须至少包含 `@On[Text|Binary]Message` 或 `@OnOpen` 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr "如果任何端点违反了这些规则，在构建时就会出错。代表子网络接口的静态嵌套类也遵循同样的准则。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "任何在 WebSocket 端点之外使用 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnOpen` 和 `@OnClose` 进行注解的方法都会被视为错误方法，并会导致构建失败，同时给出相应的错误信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Processing messages"
msgstr "处理信息"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "从客户端接收信息的方法用 `@OnTextMessage` 或 `@OnBinaryMessage` 进行注释。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr "`OnTextMessage` 从客户端接收到的 _每条_ _文本_ 信息都会调用 。 `OnBinaryMessage` "

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Invocation rules"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When invoking the callback methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined from the return type of the method and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are the rules governing execution:"
msgstr "以下是执行规则："

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@RunOnVirtualThread`, `@Blocking` or `@Transactional` are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods declared in a class annotated with `@RunOnVirtualThread` are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@NonBlocking` are considered non-blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods declared in a class annotated with `@Transactional` are considered blocking unless annotated with `@NonBlocking`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "If the method does not declare any of the annotations listed above the execution model is derived from the return type:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `Uni` and `Multi` are considered non-blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `void` or any other type are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Kotlin `suspend` functions are always considered non-blocking and may not be annotated with `@Blocking`, `@NonBlocking`\n"
"or `@RunOnVirtualThread` and may not be in a class annotated with `@RunOnVirtualThread`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Non-blocking methods must execute on the connection's event loop thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Blocking methods must execute on a worker thread unless annotated with `@RunOnVirtualThread` or in a class annotated\n"
"with `@RunOnVirtualThread`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Methods annotated with `@RunOnVirtualThread` or declared in class annotated with `@RunOnVirtualThread` must execute on\n"
"a virtual thread, each invocation spawns a new virtual thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Method parameters"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept exactly one message parameter:"
msgstr "该方法必须准确接受一个信息参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object (of any type)."
msgstr "信息对象（任何类型）。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "A `Multi<X>` with X as the message type."
msgstr "`Multi<X>` ，信息类型为 X。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "However, it may also accept the following parameters:"
msgstr "不过，它也可以接受以下参数："

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`WebSocketConnection`/`WebSocketClientConnection`"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`String` 注释的参数 `@PathParam`"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "消息对象代表发送的数据，可作为原始内容（ `String` , `JsonObject` , `JsonArray` , `Buffer` 或 `byte[]` ）或反序列化的高级对象访问，这是推荐的方法。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"If the method returns a `Multi` (constructed from the received one), Quarkus will automatically subscribe to it and write the emitted items until completion, failure, or cancellation.\n"
"However, if your method does not return a `Multi`, you must subscribe to the incoming `Multi` to consume the data."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Here are two examples:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the incoming `Multi`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Supported return types"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "使用 `@OnTextMessage` 或 `@OnBinaryMessage` 进行注解的方法可以返回各种类型，以便有效处理 WebSocket 通信："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void` :表示阻塞方法，不会向客户端发送明确的响应。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No explicit response is sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` 类型的对象代表一个阻塞方法，在该方法中，返回的对象被序列化，并作为响应发送回客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>` :指定一个非阻塞方法，在该方法中，非空 `Uni` 发送的项目将作为响应发送给客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>` :表示一个非阻塞方法，在该方法中，非空 `Multi` 发送的项目会按顺序发送到客户端，直至完成或取消。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit response is sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client as a response."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are some examples of these methods:"
msgstr "下面是这些方法的一些例子："

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Methods returning `Uni` and `Multi` are considered non-blocking.\n"
"In addition, Quarkus automatically subscribes to the returned `Multi` / `Uni` and writes the emitted items until completion, failure, or cancellation.\n"
"Failure or cancellation terminates the connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Streams"
msgstr "溪流"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr "除了单条信息外，WebSocket 端点还能处理信息流。在这种情况下，该方法接收 `Multi<X>` 作为参数。 `X` 的每个实例都将使用上述相同规则进行反序列化。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr "接收 `Multi` 的方法可以返回另一个 `Multi` 或 `void` 。如果方法返回的是 `Multi` ，则不必订阅传入的 `multi` ："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This approach allows bi-directional streaming."
msgstr "这种方法允许双向流。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When the method returns `void`, and so does not return a `Multi`, the code must subscribe to the incoming `Multi`.\n"
"Otherwise, no data will be consumed, and the connection will not be closed:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Also note that the `stream` method will complete before the `Multi` completes."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Skipping reply"
msgstr "跳过回复"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr "当一个方法打算产生一条写给客户端的消息时，它可以发出 `null` 。发送 `null` 表示不向客户端发送响应，以便在需要时跳过响应。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "JsonObject and JsonArray"
msgstr "JsonObject 和 JsonArray"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr "Vert.x `JsonObject` 和 `JsonArray` 实例绕过了序列化和反序列化机制。信息以文本信息的形式发送。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "OnOpen and OnClose methods"
msgstr "打开和关闭方法"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "当客户端连接或断开时，WebSocket 端点也会收到通知。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "具体做法是用 `@OnOpen` 或 `@OnClose` 对方法进行注释："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` 在客户端连接时触发，而 则在断开连接时调用。 `@OnClose` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "这些方法可以访问 _会话作用域_ `WebSocketConnection` Bean。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Parameters"
msgstr "参数"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "注释为 `@OnOpen` 和 `@OnClose` 的方法可接受以下参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "注释为 `@OnClose` 的端点方法也可接受 `io.quarkus.websockets.next.CloseReason` 参数，该参数可指明关闭连接的原因。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` 和 方法支持不同的返回类型。 `@OnClose` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr "对于 `@OnOpen` 方法，适用与 `@On[Text|Binary]Message` 相同的规则。因此，注释为 `@OnOpen` 的方法可以在连接后立即向客户端发送消息。 `@OnOpen` 方法支持的返回类型有"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void` :表示阻塞方法，不会向已连接的客户端发送明确信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>` :表示非阻塞方法，返回 `Uni` 表示处理结束。不会向客户端发送任何信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` 类型的对象：代表一个阻塞方法，返回的对象被序列化并发送回客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>` :指定一个非阻塞方法，将非空 `Uni` 发送的项目发送到客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit message is sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Items sent to the client are <<serialization,serialized>> except for the `String`, `io.vertx.core.json.JsonObject`, `io.vertx.core.json.JsonArray`, `io.vertx.core.buffer.Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For `@OnClose` methods, the supported return types include:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: The method is considered blocking."
msgstr "`void` :该方法被认为是阻塞性的。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>` :该方法被认为是非阻塞的。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: The method is considered non-blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`@OnClose` methods declared on a server endpoint cannot send items to the connected client by returning objects.\n"
"They can only send messages to the other clients by using the `WebSocketConnection` object."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Error handling"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The method must accept exactly one _error_ parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr "一个端点可以声明多个注释为 `@io.quarkus.websockets.next.OnError` 的方法，但每个方法必须声明不同的错误参数。我们会选择声明了实际异常的最特定超类型的方法。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` parameters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy`.\n"
"For server endpoints, the error message is logged and the connection is closed by default.\n"
"For client endpoints, the error message is logged by default."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Serialization and deserialization"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next 扩展支持消息的自动序列化和反序列化。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and bypass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization convert the message from/to JSON automatically."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "如果需要自定义序列化和反序列化，可以提供自定义编解码器。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Custom codec"
msgstr "自定义编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "To implement a custom codec, you must provide a CDI bean implementing:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.BinaryMessageCodec` for binary messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.TextMessageCodec` for text messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "下面的示例展示了如何为 `Item` 类实现自定义编解码器："

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec should be used explicitly:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "指定用于报文反序列化和序列化的编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "如果序列化和反序列化必须使用不同的编解码器，可以分别指定序列化和反序列化使用的编解码器："

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for the deserialization of the incoming message"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "指定用于外发信息序列化的编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Ping/Pong messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping message] may serve as a keepalive or to verify the remote endpoint.\n"
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong message] is sent in response to a ping message and it must have an identical payload."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sending ping messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Ping messages are optional and not sent by default. However, server and client endpoints can be configured to automatically send ping messages on an interval."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sends a ping message from the server to each connected client every 2 seconds."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sends a ping message from all connected client instances to their remote servers every 10 seconds."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Servers and clients can send ping messages programmatically at any time using `WebSocketConnection` or `WebSocketClientConnection`.\n"
"There is a non-blocking variant: `Sender#sendPing(Buffer)` and a blocking variant: `Sender#sendPingAndAwait(Buffer)`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sending pong messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Server and client endpoints will always respond to a ping message sent from the remote party with a corresponding pong message, using the application data from the ping message.\n"
"This behavior is built-in and requires no additional code or configuration."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Servers and clients can send unsolicited pong messages that may serve as a unidirectional heartbeat using `WebSocketConnection` or `WebSocketClientConnection`. There is a non-blocking variant: `Sender#sendPong(Buffer)` and a blocking variant: `Sender#sendPongAndAwait(Buffer)`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Handling ping/pong messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Because ping messages are handled automatically and pong messages require no response, it is not necessary to write handlers for these messages to comply with the WebSocket protocol.\n"
"However, it is sometimes useful to know when ping or pong messages are received by an endpoint."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The `@OnPingMessage` and `@OnPongMessage` annotations can be used to define callbacks that consume ping or pong messages sent from the remote party.\n"
"An endpoint may declare at most one `@OnPingMessage` callback and at most  one `@OnPongMessage` callback.\n"
"The callback method must return either `void` or `Uni<Void>` (or be a Kotlin `suspend` function returning `Unit`), and it must accept a single parameter of type `Buffer`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Inbound processing mode"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can define the mode used to process incoming events for a specific connection using the `@WebSocket#inboundProcessingMode()`, and `@WebSocketClient.inboundProcessingMode()` respectively.\n"
"An incoming event can represent a message (text, binary, pong), opening connection and closing connection.\n"
"By default, events are processed serially and ordering is guaranteed.\n"
"This means that if an endpoint receives events `A` and `B` (in this particular order) then callback for event `B` will be invoked after the callback for event `A` completed.\n"
"However, in some situations it is preferable to process events concurrently, i.e. with no ordering guarantees but also with no concurrency limits.\n"
"For this cases, the `InboundProcessingMode#CONCURRENT` should be used."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Server API"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "HTTP server configuration"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This extension reuses the _main_ HTTP server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "因此，WebSocket 服务器的配置在 `quarkus.http.` 配置部分完成。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to `/`).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "详情请参考 xref:http-reference.adoc[HTTP 指南] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sub-websockets endpoints"
msgstr "子网络接口端点"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"A `@WebSocket` endpoint can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-websockets_.\n"
"The resulting path of these sub-websockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Sub-websockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSocket connection"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocket` endpoint and used to interact with the connected client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketConnection` object:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Note that outside of these methods, the `WebSocketConnection` object is not available. However, it is possible to <<list-open-connections,list all open connections>>."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, broadcast messages to all connected clients, etc."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)` :向客户端发送文本信息，并等待信息发送完毕。它是阻塞的，只能由执行线程调用。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking. Make sure you or Quarkus subscribes to the returned `Uni` to send the message.\n"
"If you return the `Uni` from a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), it will subscribe to it and send the message.\n"
"For example:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the `Uni`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "List open connections"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenConnections` that declares convenient methods to access the connections."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`OpenConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenConnections#findByEndpointId(String)` makes it easy to find connections for a specific endpoint."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "User data"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketConnection#userData()` method represents mutable user data associated with a connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`CoolService#isCool()` returns `Boolean` that is associated with the current connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `TypedKey.forBoolean(\"isCool\")` is the key used to obtain the data stored when the connection was created."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "CDI events"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "An asynchronous observer method is executed using the default blocking executor service."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Security"
msgstr "安全"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Security capabilities are provided by the Quarkus Security extension.\n"
"Any xref:security-identity-providers.adoc[Identity provider] can be used to convert authentication credentials on the initial HTTP request into a `SecurityIdentity` instance.\n"
"The `SecurityIdentity` is then associated with the websocket connection.\n"
"Authorization options are demonstrated in following sections."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When an OpenID Connect extension, `quarkus-oidc`, is used and token expires, Quarkus automatically closes connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Secure HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"An HTTP upgrade is secured when a standard security annotation is placed on an endpoint class or an HTTP Security policy is defined.\n"
"The advantage of securing HTTP upgrade is less processing, the authorization is performed early and only once.\n"
"You should always prefer HTTP upgrade security unless you need to perform an action on error (see <<secure-callback-methods>>) or a security check based on the payload (see <<secure-endpoints-with-permission-checkers>>)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Use standard security annotation to secure an HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Initial HTTP handshake ends with the 401 status for anonymous users.\n"
"You can also redirect the handshake request on authorization failure with the `quarkus.websockets-next.server.security.auth-failure-redirect-url` configuration property."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"HTTP upgrade is only secured when a security annotation is declared on an endpoint class next to the `@WebSocket` annotation.\n"
"Placing a security annotation on an endpoint bean will not secure bean methods, only the HTTP upgrade.\n"
"You must always verify that your endpoint is secured as intended."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Use HTTP Security policy to secure an HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Security annotations used during authentication must be placed on an endpoint class as well, for the `SecurityIdentity` is created before the websocket connection is opened."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Select Bearer token authentication mechanism"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Require that an opening WebSocket handshake request is authenticated using the bearer token authentication.\n"
"See the xref:security-authentication-mechanisms.adoc#use-annotations-for-path-based-auth[Authentication mechanisms in Quarkus] guide for more information about selecting authentication mechanisms with annotations."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Start authenticating an opening WebSocket handshake request only when the `io.quarkus.oidc.BearerTokenAuthentication` annotation is detected."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Secure WebSocket endpoint callback methods"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例如："

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The error handler is invoked in case of the authorization failure."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Secure server endpoints with permission checkers"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can be secured with the xref:security-authorize-web-endpoints-reference.adoc#permission-checker[permission checkers].\n"
"We recommend to <<secure-http-upgrade>> rather than individual endpoint methods. For example:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Example of a WebSocket endpoint with secured HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Example of a permission checker authorizing the HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "A permission checker authorizing an HTTP upgrade must declare exactly one method parameter, the `SecurityIdentity`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "It is also possible to run security checks on every message. For example, a message payload can be accessed like this:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `getProduct` callback method can only be invoked if the current security identity has an `admin` role or the user is allowed to get the product detail."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "More information about permission checkers can be found on the JavaDoc of link:https://javadoc.io/doc/io.quarkus.security/quarkus-security/latest/io.quarkus.security.api/io/quarkus/security/PermissionChecker.html[`@PermissionChecker`]."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Bearer token authentication"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] expects that the bearer token is passed in the `Authorization` header during the initial HTTP handshake.\n"
"Java WebSocket clients such as <<client-api, WebSockets Next Client>> and https://vertx.io/docs/vertx-core/java/#_websockets_on_the_client[Vert.x WebSocketClient] support adding custom headers to the WebSocket opening handshake.\n"
"However, JavaScript clients that follow the https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] do not support adding custom headers.\n"
"Therefore, passing a bearer access token using a custom `Authorization` header is impossible with JavaScript-based WebSocket clients.\n"
"The JavaScript WebSocket client only allows to configure the HTTP https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Protocol[Sec-WebSocket-Protocol] request header for negotiating a sub-protocol.\n"
"If absolutely necessary, the `Sec-WebSocket-Protocol` header might be used as a carrier for custom headers, to provide a workaround the https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] restrictions.\n"
"Here is an example of a JavaScript client propagating the `Authorization` header as a sub-protocol value:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Expected format for the Quarkus Header sub-protocol is `quarkus-http-upgrade#header-name#header-value`.\n"
"Do not forget to encode the sub-protocol value as a URI component to avoid encoding issues."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Indicate 2 sub-protocols supported by the client, the sub-protocol of your choice and the Quarkus HTTP upgrade sub-protocol."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For the WebSocket server to accept the `Authorization` passed as a sub-protocol, we must:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Configure our WebSocket server with the supported sub-protocols. When the WebSocket client provides a lists of supported sub-protocols in the HTTP `Sec-WebSocket-Protocol` request header, the WebSocket server must agree to serve content with one of them."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Enable Quarkus HTTP upgrade sub-protocol mapping to the opening WebSocket handshake request headers."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket security model is origin-based and is not designed for the client-side authentication with headers or cookies.\n"
"For example, web browsers do not enforce the Same-origin policy for the opening WebSocket handshake request.\n"
"When you plan to use bearer access tokens during the opening WebSocket handshake request, we strongly recommend to follow the additional security measures listed below to minimize the security risks:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Restrict supported Origins to trusted Origins only with the xref:security-cors.adoc#cors-filter[CORS filter]."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Use the `wss` protocol to enforce encrypted HTTP connection via TLS."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Use a custom WebSocket ticket system which supplies a random token with the HTML page which hosts the JavaScript WebSockets client which must provide this token during the initial handshake request as a query parameter."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Inspect and/or reject HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"To inspect an HTTP upgrade, you must provide a CDI bean implementing the `io.quarkus.websockets.next.HttpUpgradeCheck` interface.\n"
"Quarkus calls the `HttpUpgradeCheck#perform` method on every HTTP request that should be upgraded to a WebSocket connection.\n"
"Inside this method, you can perform any business logic and/or reject the HTTP upgrade."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Example HttpUpgradeCheck"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The CDI beans implementing `HttpUpgradeCheck` interface can be either `@ApplicationScoped`, `@Singleton` or `@Dependent` beans, but never the `@RequestScoped` beans."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Reject the HTTP upgrade. Initial HTTP handshake ends with the 400 Bad Request response status code."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "You can choose WebSocket endpoints to which the `HttpUpgradeCheck` is applied with the `HttpUpgradeCheck#appliesTo` method."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "TLS"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "As a direct consequence of the fact this extension reuses the _main_ HTTP server, all the relevant server configurations apply. See Refer to the xref:http-reference.adoc#ssl[HTTP guide] for more details."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Hibernate multitenancy"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `RoutingContext` is not available after the HTTP upgrade. However, it is possible to inject the `WebSocketConnection` and access the headers of the initial HTTP request."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "If a custom `TenantResolver` is used and you would like to combine REST/HTTP and WebSockets, the code may look like this:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For more information on Hibernate multitenancy, refer to the https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate documentation]."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Client API"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Client connectors"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"A connector can be used to configure and open a new client connection backed by a client endpoint that is used to consume and send messages.\n"
"Quarkus provides a CDI bean with bean type `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` and default qualifer that can be injected in other beans.\n"
"The actual type argument of an injection point is used to determine the client endpoint.\n"
"The type is validated during build - if it does not represent a client endpoint the build fails."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Let’s consider the following client endpoint:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Client endpoint"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The connector for this client endpoint is used as follows:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Connector"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Inject the connector for `ClientEndpoint`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "If the base `URI` is not supplied we attempt to obtain the value from the config. The key consists of the client id and the `.base-uri` suffix."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Set the path param value. Throws `IllegalArgumentException` if the client endpoint path does not contain a parameter with the given name."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Use the connection to send messages, if needed."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "If an application attempts to inject a connector for a missing endpoint, an error is thrown."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Connectors are not thread-safe and should not be used concurrently.\n"
"Connectors should also not be reused.\n"
"If you need to create multiple connections in a row you'll need to obtain a new connetor instance programmatically using `Instance#get()`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Basic connector"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"In the case where the application developer does not need the combination of the client endpoint and the connector, a _basic connector_ can be used.\n"
"The basic connector is a simple way to create a connection and consume/send messages without defining a client endpoint."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Inject the connector."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The base URI must be always set."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The additional path that should be appended to the base URI."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Set the execution model for callback handlers. By default, the callback may block the current thread. However in this case, the callback is executed on the event loop and may not block the current thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The lambda will be called for every text message sent from the server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The basic connector is closer to a low-level API and is reserved for advanced users.\n"
"However, unlike others low-level WebSocket clients, it is still a CDI bean and can be injected in other beans.\n"
"It also provides a way to configure the execution model of the callbacks, ensuring optimal integration with the rest of Quarkus."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSocket client connection"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketClientConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocketClient` endpoint and used to interact with the connected server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketClientConnection` object:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Note that outside of these methods, the `WebSocketClientConnection` object is not available. However, it is possible to <<list-open-client-connections,list all open client connections>>."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, etc."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `WebSocketClientConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "List open client connections"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenClientConnections` that declares convenient methods to access the connections."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`OpenClientConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenClientConnections#findByClientId(String)` makes it easy to find connections for a specific endpoint."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketClientConnection#userData()` method represents mutable user data associated with a connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Specify in connector"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "In some scenarios you may wish to associate user data with a connection to be created by a <<client-connectors,connector>>. In this case, you can set values on the connector instance prior to obtaining the connection. This is particularly useful if you need to do something when the connection is opened and the necessary context cannot be otherwise inferred."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Endpoint"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Configuring SSL/TLS"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "To establish a TLS connection, you need to configure a _named_ configuration using the xref:./tls-registry-reference.adoc[TLS registry]. This is typically done via configuration:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "With a _named_ TLS configuration established, you can then configure the client to use it:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Alternatively, you can supply the configuration name using the <<client-connectors,connector>>:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "A name supplied to the connector will override any statically configured name. This can be useful for establishing a default configuration which can be overridden at runtime as necessary."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When using the WebSocket client, using a _named_ configuration is required to avoid conflicts with other TLS configurations.\n"
"The client will not use the default TLS configuration."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When you configure a _named_ TLS configuration, TLS is enabled by default."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Traffic logging"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Quarkus can log the messages sent and received for debugging purposes.\n"
"To enable traffic logging for the server, set the `quarkus.websockets-next.server.traffic-logging.enabled` configuration property to `true`.\n"
"To enable traffic logging for the client, set the `quarkus.websockets-next.client.traffic-logging.enabled` configuration property to `true`.\n"
"The payload of text messages is logged as well.\n"
"However, the number of logged characters is limited.\n"
"The default limit is 100, but you can change this limit with the `quarkus.websockets-next.server.traffic-logging.text-payload-limit` and `quarkus.websockets-next.client.traffic-logging.text-payload-limit` configuration property, respectively."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The messages are only logged if the `DEBUG` level is enabled for the logger `io.quarkus.websockets.next.traffic`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Example server configuration"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Enables traffic logging."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Set the number of characters of a text message payload which will be logged."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Enable `DEBUG` level is for the logger `io.quarkus.websockets.next.traffic`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When to subscribe to a `Uni` or `Multi`"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni` and `Multi` are lazy types, which means that they do not start processing until they are subscribed to."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When you get (from a parameter or from a method you called) a `Uni` or a `Multi`, whether you should subscribe to it depends on the context:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "if you return the `Uni` or `Multi` in a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), Quarkus subscribes to it and processes the items emitted by the `Multi` or the item emitted by the `Uni`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When a `Uni` or `Multi` is returned from a method annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, or `@OnClose`, Quarkus subscribes to it automatically."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "if you do not return the `Uni` or `Multi` in a method invoked by Quarkus, you should subscribe to it:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Telemetry"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When the OpenTelemetry extension is present, traces for opened and closed WebSocket connections are collected by default.\n"
"If you do not require WebSocket traces, you can disable collecting of traces like in the example below:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When the Micrometer extension is present, Quarkus can collect metrics for messages, errors and bytes transferred.\n"
"If you require a WebSocket metrics, you can enable the metrics like in the example below:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Telemetry for the `BasicWebSocketConnector` is currently not supported."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
